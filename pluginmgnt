#!/bin/bash

resourcepath="/opt/minecraft/.mc-resources/plugins"
pluginpath="/opt/minecraft/mc-main/plugins"
 
basename=$(basename ${0})
  
cmd_usage(){
    echo "Usage: ${basename} <command> [options]"
    echo "Available commands:"
    echo "    list    List all plugins and symlinks in your resource and server folder"
    echo "    up      Enable a plugin"
    echo "    down    Disable a plugin"
    echo ""
    echo "To display this usage information run \"$ ${basename} -h|--help\""
    echo ""
}

cmd_list(){
    if [ "${#}" -ne 1 ]; then
        echo "Error: No argument given!"
        echo "Usage: $ ${basename} list resources|server"
        exit 1
    fi

    if [[ ${1} == "resources" ]]; then
        ls -al ${resourcepath} | tail -n +4 | awk '{ print $9" "$10" "$11 }'
        exit 0
    elif [[ ${1} == "server" ]]; then
        ls -alp ${pluginpath} | grep -v '/$' | tail -n +4 | awk '{ print $9" "$10" "$11 }'
        exit 0
    else
        echo "Error: only \"server\" and \"resources\" are valid arguments!"
        exit 1
    fi
}

cmd_up(){
    if [ "${#}" -ne 1 ]; then
        echo "Error: No argument given!"
        echo "Usage: $ ${basename} up PluginName-latest.jar"
        exit 1
    fi

    if [ ! -L "${resourcepath}/${1}" ]; then
        echo "Error: Couldn't find plugin symlink \"${resourcepath}/${1}\""
        exit 1
    fi

    if [ -f "${pluginpath}/${1}" ]; then
        echo "Info: \"${pluginpath}/${1}\" already exists."
        MD51=`md5sum ${resourcepath}/${1} | awk '{ print $1 }'`
        MD52=`md5sum ${pluginpath}/${1} | awk '{ print $1 }'`
        if [[ "${MD51}" == "${MD52}" ]]; then
            echo "Error: Checksum of \"${pluginpath}/${1}\" and \"${resourcepath}/${1}\" are the same. Abbort."
            exit 1
        fi
    fi

    ln -sf "${resourcepath}/${1}" "${pluginpath}/${1}"
    exit 0
}

cmd_down(){
    if [ "${#}" -ne 1 ]; then
        echo "Error: No argument given!"
        echo "Usage: $ ${basename} down PluginName-latest.jar"
        exit 1
    fi

    if [ ! -L "${pluginpath}/${1}" ]; then
        echo "Error: Couldn't find plugin symlink \"${pluginpath}/${1}\""
        exit 1
    fi

    read -p "Are you sure to remove \"${pluginpath}/${1}\"? [Y/n]" REPLY

    if [ -z "${REPLY}" ]; then
        REPLY=Y
    fi

    case "${REPLY}" in
        Y*|y*)
            unlink "${pluginpath}/${1}"
            echo "Info: plugin \"${1}\" successfully removed."
            exit 0
            ;;
        N*|n*)
            echo "Warning: Removal of \"${1}\" abborted... "    
            exit 1
            ;;
    esac
}
  
cmd=${1}

case ${cmd} in
    "" | "-h" | "--help")
        cmd_usage
        ;;
    *)
        shift
        cmd_${cmd} ${@}
        if [ ${?} = 127 ]; then
            echo "Error: '${cmd}' is not a known command." >&2
            echo "    Execute \`${basename} -h|--help\` for a list of commands." >&2
            exit 1
        fi
        ;;
esac